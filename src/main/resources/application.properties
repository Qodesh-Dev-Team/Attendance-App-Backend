spring.application.name=hallow

server.port=${PORT:9090}
server.servlet.context-path=/hallow

spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=none

spring.datasource.url=${JDBC_URL:jdbc:postgresql://ep-old-shape-a51h6cj6-pooler.us-east-2.aws.neon.tech/qodeshdb?sslmode=require}
spring.datasource.username=${JDBC_USER:qodeshdb_owner}
spring.datasource.password=${JDBC_PASSWORD:npg_7mePLf3BpYqA}
spring.datasource.driver-class-name=org.postgresql.Driver

logging.level.root=INFO
logging.level.com.qcc.hallow=DEBUG

spring.jpa.properties.hibernate.hbm2ddl.schema-generation.create-source=metadata
spring.jpa.properties.hibernate.hbm2ddl.schema-generation.scripts.action=create
spring.jpa.properties.hibernate.hbm2ddl.schema-generation.scripts.create-target=create.sql
# Optional: Set to validate once your schema is stable
# spring.jpa.hibernate.ddl-auto=validate


application.api.key=${API_KEY:my-api-key}
smtp2go_api_url=${SMTP2GO_API_URL:1244545}
smtp2go_api_key=${SMTP2GO_API_KEY:12313213}